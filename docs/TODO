// skiplist
  - handle deletion better -- delete the levels if last node
  - prevent levels growing up if there's only one node in level below (keep a max height on the skiplist and only allow grow by 1 level at a time)
  - add other methods (like reverse? root and terminus and double linked)

// heap 
  - iterator

- [ ] Summary structure (count, sum, average, max, min, ~median?, ~membership?, etc without storing any data, just seeing it, online)
  - [ ] Structures for count distinct, hyperloglog, streaming 
  - one reference for something related https://github.com/marmarelis/rolling-quantiles
- [ ] [Treap](src/treap.js)
- [ ] Median heap
- [ ] [Balanced static BST](src/static-bst.js) ([Day–Stout–Warren algorithm](https://en.wikipedia.org/wiki/Day%E2%80%93Stout%E2%80%93Warren_algorithm))
- [ ] BIT/Fenwich Tree
- [ ] Segment Tree
- [ ] [Radix trie](src/trie.js) (Adaptive?)
- [ ] \*Sorted-linked-array 
- [ ] Heap X Circular buffer ( I have an idea for something like concentric circles, heap, each row / layer of heap is actually a circle, maybe like a linked list, or a circular buffer. Somehow combining some heap priority property with some FIFO or overwrite thing. Not sure yet, but maybe there is something )
- [ ] Circular queue (circular buffer, overwrite queue)
- [ ] Suffix trie
- [ ] Suffix array (something efficient from here about strings BWT, FM-index)
- [ ] Hashtable (discohash)
- [ ] Disjoint set union
- [ ] B-Tree
- [ ] Hierarchical/topological search tree
- [ ] Conflict-free replicated list
- [ ] conflict-free replicated map
- [ ] Conflict-free replicated JSON?
- [ ] Myers algorithm for diffs, longest common subsequence, sequence alignment, edit script, edit distance, and so on. :) ;P xx CHAKKA ;P ;) xxxX! WOo! OORAH !! OH YEAH :p :) xxx :p :) XXXX


\* - invention


- Add docs, complexity, and time benchmarks for all APIs
